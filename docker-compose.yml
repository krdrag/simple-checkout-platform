version: '3.4'

services:
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    ports:
    - '5672:5672'
    - '15672:15672'
    env_file:
    - '.env.docker'
    volumes:
    - rabbitdata:/var/lib/rabbitmq/
    - rabbitlogs:/var/log/rabbitmq/

  redis-cache:
    container_name: redis-cache
    image: redis:6.2-alpine
    restart: always
    ports:
    - '6379:6379'
    env_file:
    - '.env.docker'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PWD}
    volumes: 
    - redis-cache:/data

  scp.identity.api:
    container_name: scp-identity
    image: ${DOCKER_REGISTRY-}scpidentityapi
    ports:
    - "5100:80"
    - "6100:443"
    env_file:
    - '.env.docker'
    build:
      context: .
      dockerfile: src/Identity/SCP.Identity.API/Dockerfile

  scp.session.api:
    container_name: scp-session
    image: ${DOCKER_REGISTRY-}scpsessionapi
    ports:
    - "5002:80"
    env_file:
    - '.env.docker'
    build:
      context: .
      dockerfile: src/Session/SCP.Session.API/Dockerfile

  scp.transaction.api:
    container_name: scp-transaction
    image: ${DOCKER_REGISTRY-}scptransactionapi
    ports:
    - "5001:80"
    env_file:
    - '.env.docker'
    build:
      context: .
      dockerfile: src/Transaction/SCP.Transaction.API/Dockerfile

volumes:
  rabbitdata:
  rabbitlogs:
  redis-cache:
    driver: local